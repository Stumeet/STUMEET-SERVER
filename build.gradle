plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.stumeet'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    // jwt 의존성 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'org.flywaydb:flyway-core'

    implementation(platform("software.amazon.awssdk:bom:2.21.1"))
    implementation 'software.amazon.awssdk:s3'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta" // 버전 변경
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    testImplementation 'org.springframework.cloud:spring-cloud-contract-stub-runner'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy(asciidoctor)
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
    finalizedBy(copyDocs)
}

tasks.register('copyDocs', Copy) {
    dependsOn 'asciidoctor'
    from 'build/docs/asciidoc'
    into 'src/main/resources/static/docs'
}

tasks.named('jib') {
    dependsOn(asciidoctor)
}

jib {
    from {
        image = "eclipse-temurin:21"
    }
    to {
        image = "stumeet/server"
        tags = [version]
    }
    container {
        jvmFlags = ["-Xms128m", "-Xmx128m"]
        environment = [
                'SPRING_PROFILES_ACTIVE': 'prod'
        ]
    }
    extraDirectories {
        paths {
            path {
                from = "build/docs/asciidoc"
                into = "/app/resources/static/docs"
            }
        }
    }
}
